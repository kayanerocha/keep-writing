@model KeepWriting.ViewModels.EditarHistoria

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Editar", "Historia", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Historia</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdHistoria)

    @{
        int culture = Convert.ToInt32(Session["CurrentCulture"].ToString());
    }
    <div class="form-group">
        @Html.LabelFor(model => model.Genero, "IdGeneroPortugues", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (culture == 0)
            {
                @Html.DropDownList("IdGeneroPortugues", null, htmlAttributes: new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownList("IdGeneroIngles", null, htmlAttributes: new { @class = "form-control" })
            }
            @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sinopse, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sinopse, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sinopse, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @*@Html.LabelFor(model => model.Classificacao, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label for="Classificacao" class="control-label col-md-2">Classificação</label>
        <div class="col-md-10">
            <div class="checkbox">
                @if (culture == 0)
                {
                    @Html.DropDownListFor(model => model.ClassificacaoPortugues, new SelectList(ViewBag.ClassificacoesPortugues, "Id", "Descricao"), new { @class = "form-control" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.ClassificacaoIngles, new SelectList(ViewBag.ClassificacoesIngles, "Id", "Descricao"), new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(model => model.ClassificacaoPortugues, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ImagemUpload, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ImagemUpload, new { type = "file", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ImagemUpload, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdIdioma, "IdIdioma", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdIdioma", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdIdioma, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Minhas histórias", "MinhasHistorias")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
